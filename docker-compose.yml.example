# Note: data containers are used here mainly for developing with
# MacOS. Docker performance is too slow to run rails when the gems
# and/or database is stored on host-mounted volumes.
#
# Create data volumes like this:
# docker run -v /var/lib/postgresql/data --name pgdata postgres:11.2 echo 'Postgres data'
# docker run -v /usr/local/rvm/gems -v /home/app/workshops/vendor/cache \
#    --name rubygems "phusion/passenger-ruby26:1.0.10" echo 'Ruby gems'
#
# Be sure to update all of the example passwords and keys with secure ones!
# Generate secure strings using:
# < /dev/urandom LC_CTYPE=C tr -dc _A-Z-a-z-0-9 | head -c${1:-64};echo


version: '3.8'
services:
  db:
    image: postgres:9.6.5
    container_name: wsdb
    volumes:
      - ./db/pg-init:/docker-entrypoint-initdb.d
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=zzzzzzzzzzzzzzzz
      - PSQL_TRUST_LOCALNET=true
      - DB_PORT=5433
      - DB_NAME=workshops_production,workshops_development,workshops_test
      - DB_USER=wsuser
      - DB_PASS=yyyyyyyyyyyyyyy

  web:
    build: .
    container_name: ws
    command: /sbin/entrypoint.sh
    ports:
      - '80:80'
    volumes:
      - ./:/home/app/workshops
      - ./entrypoint.sh:/sbin/entrypoint.sh
      - /Users/brent/rails/ssh-keys:/root/.ssh
      - rubygems:/usr/local/rvm/gems
      - rubygems:/home/app/workshops/vendor/cache
    links:
      - db
    environment:
      - DB_USER=wsuser
      - DB_PASS=yyyyyyyyyyyyyyy
      - DB_HOST=db
      - RAILS_ENV=development
      - YARN_ENV=development
      - RAILS_SERVE_STATIC_FILES=true
      - SECRET_KEY_BASE=xxxxxxxxxxx
      - SECRET_TOKEN=xxxxxxxxxxx
      - DEVISE_SECRET_KEY=xxxxxxxxxxx
      - DEVISE_JWT_SECRET_KEY=xxxxxxxxxxx
      - DEVISE_PEPPER=xxxxxxxxxxx
      - DEVISE_EMAIL=webmaster@example.com
      - LECTURES_API_KEY=xxxxxxxxxxx
      - APPLICATION_HOST=localhost
      - APPLICATION_PROTOCOL=http
      - EMAIL_SERVER=mail.example.com
      - EMAIL_PORT=587
      - EMAIL_STARTTLS=true
      - MAILGUN_API_KEY=xxxxxxxxxxx
      - MAILGUN_EMAIL_DOMAIN=staging.example.com
      - CORS_HOSTS="'https://locomotive.works', 'http://locomotive.works',
        'https://www.example.com', 'http://www.example.com'"
      - MAILHOG_HOST=xxxxxxxxxxx

# adding labels allows pruning of unused system volumes with:
# docker volume prune --filter 'label!=workshops_volume'"
volumes:
  pgdata:
    labels:
      workshops_volume: ""
  rubygems:
    labels:
      workshops_volume: ""
